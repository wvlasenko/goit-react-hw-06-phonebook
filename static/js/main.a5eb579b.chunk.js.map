{"version":3,"sources":["componnents/Filter/Filter.module.css","App.module.css","redux/contacts-actions.js","componnents/ContactForm/ContactForm.js","componnents/ContactList/ContactListItem/ContactListItem.js","componnents/ContactList/ContactList.js","componnents/Filter/Filter.js","App.js","redux/contact-reducer.js","redux/store.js","index.js","componnents/ContactForm/ContactForm.module.css","componnents/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid4","removeContact","filterContacts","connect","state","contacts","items","dispatch","onAddContact","useState","contactName","setContactName","contactNumber","setContactNumber","onInputValue","e","target","value","onSubmit","preventDefault","some","contact","alert","className","ContactFormStl","ContactForm","label","type","onChange","input","buttonSubmit","ContactListItem","onRemove","ContactListItemStl","container","contactInfo","action","onClick","visibleContacts","filter","toLocaleLowerCase","includes","getVisibleContacts","onRemoveItem","ContactListStl","contactList","map","visibleContact","onChangeFilter","FilterStl","filterContainer","AppStl","heading","length","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","rootReducer","persistReducer","contactsReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","exportedStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.a5eb579b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2AIMV\",\"input\":\"Filter_input__1If3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__39fTT\",\"heading\":\"App_heading__26Re3\"};","import { v4 as uuid4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contact/Add', (name, number) => ({\r\n  payload: {\r\n    id: uuid4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const removeContact = createAction('contact/Remove');\r\n\r\nexport const filterContacts = createAction('contact/Filter');\r\n","// import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\n// import { v4 as uuid4 } from 'uuid';\r\nimport ContactFormStl from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ contacts, onAddContact }) {\r\n  const [contactName, setContactName] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('');\r\n\r\n  const onInputValue = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'contactName':\r\n        setContactName(value);\r\n        break;\r\n      case 'contactNumber':\r\n        setContactNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onSubmitContact = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === contactName)) {\r\n      alert(`${contactName} is already in Contacts`);\r\n      return;\r\n    }\r\n    onAddContact(contactName, contactNumber);\r\n    setContactName('');\r\n    setContactNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitContact} className={ContactFormStl.ContactForm}>\r\n      <label className={ContactFormStl.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          value={contactName}\r\n          onChange={onInputValue}\r\n          name=\"contactName\"\r\n          className={ContactFormStl.input}\r\n        />\r\n      </label>\r\n      <label className={ContactFormStl.label}>\r\n        Phone Number\r\n        <input\r\n          type=\"text\"\r\n          value={contactNumber}\r\n          onChange={onInputValue}\r\n          name=\"contactNumber\"\r\n          className={ContactFormStl.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={ContactFormStl.buttonSubmit}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\nimport ContactListItemStl from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact, onRemove }) {\n  const { name, number } = contact;\n  return (\n    <li className={ContactListItemStl.container}>\n      <div className={ContactListItemStl.contactInfo}>\n        {name} : {number}\n      </div>\n      <section className={ContactListItemStl.action}>\n        <button type=\"button\" onClick={onRemove}>\n          Delete\n        </button>\n      </section>\n    </li>\n  );\n}\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { connect } from 'react-redux';\r\nimport { removeContact } from '../../redux/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport ContactListStl from './ContactListItem/ContactListItem.module.css';\r\n\r\nfunction ContactsList({ visibleContacts, onRemoveItem }) {\r\n  return (\r\n    <ul className={ContactListStl.contactList}>\r\n      {visibleContacts.map(visibleContact => (\r\n        <ContactListItem\r\n          contact={visibleContact}\r\n          onRemove={() => onRemoveItem(visibleContact.id)}\r\n          key={visibleContact.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  visibleContacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n\r\n  onRemoveItem: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  const { contacts } = state;\r\n\r\n  const filtredContacts = getVisibleContacts(contacts.items, contacts.filter);\r\n  return {\r\n    visibleContacts: filtredContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemoveItem: id => dispatch(removeContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts-actions';\nimport PropTypes from 'prop-types';\nimport FilterStl from './Filter.module.css';\n\nfunction Filter({ filter, onChangeFilter }) {\n  return (\n    <div className={FilterStl.filterContainer}>\n      <label className={FilterStl.label}>\n        Find contact by name:\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={onChangeFilter}\n          name=\"filter\"\n          className={FilterStl.input}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(filterContacts(e.target.value)),\n});\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\r\nimport ContactForm from './componnents/ContactForm/ContactForm';\r\nimport ContactsList from './componnents/ContactList/ContactList';\r\nimport Filter from './componnents/Filter/Filter';\r\nimport AppStl from './App.module.css';\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <div className={AppStl.container}>\r\n      <h2 className={AppStl.heading}>PhoneBook</h2>\r\n\r\n      <ContactForm />\r\n\r\n      <h2 className={AppStl.heading}>Contacts</h2>\r\n\r\n      {contacts.length > 1 && <Filter />}\r\n\r\n      {contacts.length > 0 && <ContactsList />}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst initialFilter = '';\r\n\r\nconst items = createReducer(initialState, {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.removeContact]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(initialFilter, {\r\n  [actions.filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contact-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst exportedStore = { store, persistor };\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default exportedStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport exportedStore from './redux/store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={exportedStore.store}>\r\n      <PersistGate loading={null} persistor={exportedStore.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__BWWu-\",\"label\":\"ContactForm_label__3Kxiz\",\"input\":\"ContactForm_input__3nNOR\",\"buttonSubmit\":\"ContactForm_buttonSubmit__2yKKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__1K0XA\",\"contactInfo\":\"ContactListItem_contactInfo__2ZTTB\",\"action\":\"ContactListItem_action__1ow8v\"};"],"sourceRoot":""}